<meta charset="utf-8" />
@model PiwkoMozna.Models.RecenzjaModel

@{
    ViewData["Title"] = "Dodaj recenzję";
}

<h1>Dodawanie Recenzji do @ViewData["BeerNameRecenzja"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                 <input type="hidden" asp-for="UserID" value="@ViewData["UserIDRecenzja"]" />
            </div>

            <div class="form-group">
                <input type="hidden" asp-for="BeerName" value="@ViewData["BeerNameRecenzja"]" />
            </div>


            <div class="form-group">
                <label asp-for="Rating" class="control-label"></label>
                <input asp-for="Rating" class="form-control" />
                <span asp-validation-for="Rating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Comment" class="control-label"></label>
                <input asp-for="Comment" class="form-control" />
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="PiwoModel" asp-route-BeerName="@ViewData["BeerNameRecenzja"]" asp-action="KatalogRecenzje">Powrót do recenzji piwa @ViewData["BeerNameRecenzja"]</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
