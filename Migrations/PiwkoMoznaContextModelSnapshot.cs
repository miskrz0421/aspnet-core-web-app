// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PiwkoMozna.Data;

#nullable disable

namespace PiwkoMozna.Migrations
{
    [DbContext(typeof(PiwkoMoznaContext))]
    partial class PiwkoMoznaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("PiwkoMozna.Models.BrowarModel", b =>
                {
                    b.Property<string>("BreweryName")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Founded")
                        .HasColumnType("INTEGER");

                    b.HasKey("BreweryName");

                    b.ToTable("BrowarModel");
                });

            modelBuilder.Entity("PiwkoMozna.Models.PiwoModel", b =>
                {
                    b.Property<string>("BeerName")
                        .HasColumnType("TEXT");

                    b.Property<double>("ABV")
                        .HasColumnType("REAL");

                    b.Property<double>("AverageRating")
                        .HasColumnType("REAL");

                    b.Property<string>("BreweryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BeerName");

                    b.HasIndex("BreweryName");

                    b.ToTable("PiwoModel");
                });

            modelBuilder.Entity("PiwkoMozna.Models.RecenzjaModel", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BeerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReviewID");

                    b.HasIndex("BeerName");

                    b.HasIndex("UserID");

                    b.ToTable("RecenzjaModel");
                });

            modelBuilder.Entity("PiwkoMozna.Models.UzytkownikModel", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("UzytkownikModel");
                });

            modelBuilder.Entity("PiwkoMozna.Models.PiwoModel", b =>
                {
                    b.HasOne("PiwkoMozna.Models.BrowarModel", "BrowarModel")
                        .WithMany()
                        .HasForeignKey("BreweryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrowarModel");
                });

            modelBuilder.Entity("PiwkoMozna.Models.RecenzjaModel", b =>
                {
                    b.HasOne("PiwkoMozna.Models.PiwoModel", "PiwoModel")
                        .WithMany()
                        .HasForeignKey("BeerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiwkoMozna.Models.UzytkownikModel", "UzytkownikModel")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PiwoModel");

                    b.Navigation("UzytkownikModel");
                });
#pragma warning restore 612, 618
        }
    }
}
